<?xml version="1.0" encoding="utf-8"?><!-- 使用XML文件定义菜单的好处在于消除了代码臃肿,把Menu存放在对应的
文件中也显得规范 也使得程序更加解耦
它包含如下的子元素:
<item../>元素:定义菜单项
<group.../>子元素:将多个<item../>定义的菜单项包装成一个菜单组
checkableBehavior:指定该组菜单的选择行为。可指定为none(不可选)、all(多选)、single(单选)
menuCategory:对菜单进行分类,指定菜单的优先级.有效值为container、system、secondary 和alternative
visible:指定该组菜单是否可见
enable:指定该组菜单是否可用
<item../>元素用于定义菜单项,<item../>元素又可包含<menu../>元素,位于<item../>元素内部的<menu../>元素就代表了子菜单
<item../>元素可指定如下常用属性
android:id 为菜单项指定id
android:title 为菜单项指定标题
android:icon  为菜单项指定图标
android:alphabeticShortcut:为菜单项指定字符快捷键
android:numericShortcut:为菜单项指定数字快捷键
android:checkable:设置该菜单项是否可选
android:checked:设置该菜单项是否已选中
android:visible:设置该菜单项是否可见
android:enable:设置该菜单项是否可用
 在程序中顶一个了菜单资源后,接下来还是重写onCreateOptionsMenu(用于创建选项菜单)
 onCreateContextMenu(用于创建上下文菜单) 在这些方法中调用MenuInflater对象的inflate方法加载指定资源对应的菜单即可
 -->
<menu xmlns:android="http://schemas.android.com/apk/res/android">
    <item
        android:icon="@drawable/a"
        android:title="@string/menu_title">
        <menu>
            <!-- 定义一组单选菜单项   -->
            <group android:checkableBehavior="single">
                <item android:id="@+id/font_10"
                    android:title="第一个"/>
                <item android:id="@+id/font_12"
                    android:title="第二个"/>
                <item android:id="@+id/font_14"
                    android:title="第三个"/>
                <item android:id="@+id/font_16"
                    android:title="第四个"/>
                <item android:id="@+id/font_18"
                    android:title="第五个"/>
            </group>
        </menu>
    </item>
    <!-- 定义一个普通菜单项   -->
    <item android:id="@+id/plain_item" android:title="普通菜单项">
    </item>
    <item android:title="阿巴" android:icon="@drawable/c">
        <menu>
            <group>
                <item android:id="@+id/red_font" android:title="红色"/>
                <item android:id="@+id/green_font" android:title="绿色"/>
                <item android:id="@+id/blue_font" android:title="蓝色"/>
            </group>
        </menu>
    </item>
</menu>